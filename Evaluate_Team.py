'''         -*- coding: utf-8 -*-
Form implementation generated from reading ui file 'Evaluate_Team.ui'
Created by: PyQt5 UI code generator 5.15.0
WARNING: Any manual changes made to this file will be lost when pyuic5 is run again.
Do not edit this file unless you know what you are doing.'''



#                   FINAL PROJECT ON FANTASY CRICKET LEAGUE 
#                               By VUNNAM ANAND
 

from PyQt5 import QtCore, QtGui, QtWidgets
import sqlite3 as sql
from Error_dialog import Ui_errorDialog
connection = sql.connect("Fantasy_cricket_db.db")
cursor = connection.cursor()

#Applying the stylesheet to the respected widgets
color = '''
QListWidget{
    font: 10pt \"Comic Sans MS\";
    border:5px solid black;
}
QComboBox:drop-down{
    border-image: url(dropdown.jpg) 2;
    border:1px solid black; 
    width:32px
}
QComboBox{
    height: 30px;
    background-color:rgb(255,255,255);
    font: 10pt \"Comic Sans MS\";
}
QPushButton:hover{
    background: lightblue;

}
QPushButton:pressed{
    background: rgb(204,204,204);
}
'''

class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(738, 625)
        # Form.setStyleSheet("font: 75 10pt \"Comic Sans MS\";")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("cricket.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Form.setWindowIcon(icon)
        self.gridLayout = QtWidgets.QGridLayout(Form)
        self.gridLayout.setObjectName("gridLayout")
        spacerItem = QtWidgets.QSpacerItem(5, 20, QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem, 0, 0, 1, 1)
        self.eval_grid_2 = QtWidgets.QGridLayout()
        self.eval_grid_2.setObjectName("eval_grid_2")
        spacerItem1 = QtWidgets.QSpacerItem(20, 10, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        self.eval_grid_2.addItem(spacerItem1, 0, 0, 1, 5)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.eval_points = QtWidgets.QLabel(Form)
        self.eval_points.setObjectName("eval_points")
        self.eval_points.setFont(font)
        self.horizontalLayout_4.addWidget(self.eval_points)
        self.eval_points_val = QtWidgets.QLabel(Form)
        self.eval_points_val.setStyleSheet("color:rgb(72,160,170);")
        self.eval_points_val.setFont(font)
        self.eval_points_val.setObjectName("eval_points_val")
        self.horizontalLayout_4.addWidget(self.eval_points_val)
        spacerItem2 = QtWidgets.QSpacerItem(100, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem2)
        self.eval_grid_2.addLayout(self.horizontalLayout_4, 6, 3, 1, 1)
        self.eval_lw2_points = QtWidgets.QListWidget(Form)
        self.eval_lw2_points.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.eval_lw2_points.setObjectName("eval_lw2_points")
        self.eval_lw2_points.setStyleSheet("background-color:rgb(255,255,255);\n"
        "border:1px solid black;\n"
        "color:rgb(40,110,255);")
        self.eval_grid_2.addWidget(self.eval_lw2_points, 7, 3, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(50, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.eval_grid_2.addItem(spacerItem3, 2, 2, 1, 1)
        self.hwidget_2 = QtWidgets.QWidget(Form)
        self.hwidget_2.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.hwidget_2.setObjectName("hwidget_2")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.hwidget_2)
        self.horizontalLayout_5.setContentsMargins(-1, 10, -1, -1)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem4)
        self.calcbtn = QtWidgets.QPushButton(self.hwidget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(20)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.calcbtn.sizePolicy().hasHeightForWidth())
        self.calcbtn.setSizePolicy(sizePolicy)
        self.calcbtn.setMaximumSize(QtCore.QSize(300, 16777215))
        self.calcbtn.setObjectName("calcbtn")
        self.calcbtn.setStyleSheet("border:1px solid black;font: 10pt \"Comic Sans MS\";")
        self.horizontalLayout_5.addWidget(self.calcbtn)
        spacerItem5 = QtWidgets.QSpacerItem(50, 20, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem5)
        self.eval_grid_2.addWidget(self.hwidget_2, 8, 0, 1, 5)
        spacerItem6 = QtWidgets.QSpacerItem(50, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.eval_grid_2.addItem(spacerItem6, 2, 4, 1, 1)
        spacerItem7 = QtWidgets.QSpacerItem(60, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.eval_grid_2.addItem(spacerItem7, 2, 0, 1, 1)
        self.team_combo = QtWidgets.QComboBox(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(2)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.team_combo.sizePolicy().hasHeightForWidth())
        self.team_combo.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.team_combo.setFont(font)
        self.team_combo.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.team_combo.setObjectName("team_combo")
# Adding a placeholder text to the team combobox 
        self.team_combo.setPlaceholderText("Select Team")
        self.team_combo.setStyleSheet("background-color:rgb(255,255,255);\n"
        "border:1px solid black;")
        self.eval_grid_2.addWidget(self.team_combo, 2, 1, 1, 1)
        cursor.execute("SELECT DISTINCT team_name FROM teams;")
        teams = self.listconversion(cursor.fetchall())
        for team in teams:
            self.team_combo.addItem(team)   
        spacerItem8 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        self.eval_grid_2.addItem(spacerItem8, 5, 0, 1, 5)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.perform_label = QtWidgets.QLabel(Form)
        self.perform_label.setMinimumSize(QtCore.QSize(0, 0))
        self.perform_label.setAlignment(QtCore.Qt.AlignCenter)
        self.perform_label.setObjectName("perform_label")
        self.perform_label.setStyleSheet("font: 75 10pt \"Comic Sans MS\";")
        self.eval_grid_2.addWidget(self.perform_label, 1, 0, 1, 5)
        self.eval_players = QtWidgets.QLabel(Form)
        self.eval_players.setObjectName("eval_players")
        self.eval_players.setFont(font)
        self.eval_grid_2.addWidget(self.eval_players, 6, 1, 1, 1)
        self.match_combo = QtWidgets.QComboBox(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(2)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.match_combo.sizePolicy().hasHeightForWidth())
        self.match_combo.setSizePolicy(sizePolicy)
        self.match_combo.setObjectName("match_combo")
# Adding a placeholder text to the match combobox 
        self.match_combo.setPlaceholderText("Select Match")
        self.match_combo.setStyleSheet("background-color:rgb(255,255,255);\n"
        "border:1px solid black;")
        cursor.execute("SELECT name FROM sqlite_master WHERE type = 'table' AND name LIKE 'match%'")
        matches  = self.listconversion(cursor.fetchall())
        for match in matches:
            self.match_combo.addItem(match)
        self.eval_grid_2.addWidget(self.match_combo, 2, 3, 1, 1)
        self.eval_lw_players = QtWidgets.QListWidget(Form)
        self.eval_lw_players.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.eval_lw_players.setObjectName("eval_lw_players")
        self.eval_lw_players.setStyleSheet("background-color:rgb(255,255,255);\n"
        "border:1px solid black;\n")
        self.eval_grid_2.addWidget(self.eval_lw_players, 7, 1, 1, 1)
        spacerItem9 = QtWidgets.QSpacerItem(20, 10, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.eval_grid_2.addItem(spacerItem9, 3, 0, 1, 5)
        self.line = QtWidgets.QFrame(Form)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.line.sizePolicy().hasHeightForWidth())
        self.line.setSizePolicy(sizePolicy)
        self.line.setMinimumSize(QtCore.QSize(696, 2))
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(False)
        font.setWeight(9)
        self.line.setFont(font)
        self.line.setStyleSheet("background-color: rgb(45, 45, 45)")
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.eval_grid_2.addWidget(self.line, 4, 0, 1, 5)
        self.gridLayout.addLayout(self.eval_grid_2, 0, 1, 1, 1)
        spacerItem10 = QtWidgets.QSpacerItem(5, 20, QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem10, 0, 2, 1, 1)
        self.calcbtn.clicked.connect(self.display)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

#To display the teams and matches present in the database       
    def display(self):
        self.team_combo.setEnabled(False)
        self.match_combo.setEnabled(False)
        self.eval_lw_players.clear()
        self.eval_lw2_points.clear()
        self.calcbtn.setEnabled(False)
        if self.team_combo.currentText() == "Select Team" or self.match_combo.currentText() == "Select Match":
            errorDialog = QtWidgets.QDialog()
            ui = Ui_errorDialog()
            ui.setupUi(errorDialog)
            errorDialog.show()
            ui.errormsglabel.setText("Please select a team and a match to evaluate!!")
            errorDialog.exec_()
            self.team_combo.setEnabled(True)
            self.match_combo.setEnabled(True)
            self.calcbtn.setEnabled(True)
        else:
            self.team_combo.setStyleSheet("background-color:rgb(204,204,204);border:1px solid black;color:black;")
            self.match_combo.setStyleSheet("background-color:rgb(204,204,204);border:1px solid black;color:black;")
            self.calcbtn.setStyleSheet("background-color:rgb(204,204,204);border:1px solid black;color:black;font: 75 10pt \"Comic Sans MS\";")
            cursor.execute("SELECT player FROM teams WHERE team_name = ?",(self.team_combo.currentText(),))
            players =  self.listconversion(cursor.fetchall())
            for player in players:
                self.eval_lw_players.addItem(player)
            column_name = cursor.execute("SELECT * FROM "+self.match_combo.currentText()+" INNER JOIN teams ON "+self.match_combo.currentText()+".Player = teams.player WHERE teams.team_name = ?;",(self.team_combo.currentText(),))
            self.columns = [i[0] for i in column_name.description]
            values = column_name.fetchall()
            self.matches = list()
            self.totalTeamPoints = 0
            for value in values:
                self.matches.append(dict(zip(self.columns,value)))
            for player in self.matches:
                self.getPoints(player)
            self.eval_points_val.setText(str(self.totalTeamPoints))

# To calculate the team score based on the players performance 
    def getPoints(self,player):
        points = player['Scored']//2
        if player['Scored'] >= 50:
            points += 5
        if player['Scored'] >= 100:
            points += 10
        if player['Scored'] > 0:
            strike_rate = (player['Scored']/player['Faced'])*100 
            if strike_rate >= 80 and strike_rate < 100:
                points += 2
            if strike_rate >= 100:
                points += 4
        points += player['Fours']
        points += 2*player['Sixes']
        points += 10*player['Wkts']
        if player['Wkts'] >= 3:
            points += 5
        if player['Wkts'] >= 5:
            points += 10
        overs = player['Bowled']/6
        try:
            economy_rate = player['Given']/overs
            if economy_rate <= 2:
                points += 10
            if economy_rate > 2 and economy_rate <= 3.5:
                points += 7
            if economy_rate > 3.5 and economy_rate <= 4.5:
                points += 4
        except:
            pass
        points += 10 * (player['Catches']+player['Stumping']+player['Run_out'])
        self.totalTeamPoints += points
        self.eval_lw2_points.addItem(str(points))

# Converting the list of tuples to list of strings 
    def listconversion(self,list_of_tuples):
        return list(map("".join,list_of_tuples))

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Evaluate Team"))
        self.eval_points.setText(_translate("Form", "Points"))
        self.eval_points_val.setText(_translate("Form", "####"))
        self.calcbtn.setText(_translate("Form", "Calculate Score"))
        self.perform_label.setText(_translate("Form", "Evaluate the Performance of your Fantasy Team"))
        self.eval_players.setText(_translate("Form", "Players"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    app.setStyleSheet(color)
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
